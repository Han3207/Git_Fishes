knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick)
path <- "C:/ANU study/Year 3 2022/BIOL3207/workshop/6/Git_Fishes/data/OA_activitydat_20190302_BIOL3207.csv"
path
data <- read_csv(path)
path <- ".data/OA_activitydat_20190302_BIOL3207.csv"
path
data <- read_csv(path)
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
path
data <- read_csv(path)
data_df <- data.frame(data)
fishes <- na.omit(data_df) # To remove the NA in the data frame
fishes
ggplot(fishes, aes(x = control, y = treatment, colour = species)) + geom_point()
ggplot(fishes, aes(x = activity, y = treatment, colour = species)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
path
data <- read_csv(path)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write_csv(data, file = path)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data_df <- data.frame(data)
fishes <- na.omit(data_df) # To remove the NA in the data frame
fishes
# Drop irrelevant columns
names(fishes)
fishes$comment <- NULL
fishes$loc <- NULL
# Check spelling in species and treatment but also generate a summary table
## This shows that there is no spelling error in species and treatment
list(unique(fishes$species))
list(unique(fishes$treatment))
##  OR ! Another method
table(fishes$species) ### acantho  ambon   chromis    humbug lemon whitedams
table(fishes$treatment) ### CO2 control
## This creates a summary table
library(dplyr)
fishes %>%
group_by(species) %>%
summarise(mean_sl = mean(sl), sd_sl = (sl), mean_activity = mean(activity), sd_activity = sd(activity), n= n())
# Use flextable to render the summary table in a tidy format
install.packages("flextable")
library(flextable)
flextable(fishes %>%
group_by(species) %>%
summarise(mean_sl = mean(sl), sd_sl = (sl), mean_activity = mean(activity), sd_activity = sd(activity), n= n()))
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
library(tidyverse)
ggplot(data = fishes, mapping = aes(x = treatment, y = activity, colour = species)) +
geom_boxplot()
# Use ggsave to save the figure
ggsave('./output/figures/activity_treatment.png',width = 6, height = 4)
## Adding it has prevented from the figure from being uploaded or open/ stage on the GitHub.
## Yes. The folders that contains the figures you would need to track on GitHub even if its .png files or else it would not be committed and so cannot open.
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
fishes %>% filter(species==c("chromis","lemon","acantho")) %>% ggplot(mapping = aes(x = species, y = activity, colour = treatment)) +
geom_boxplot()+
facet_wrap(~treatment)
# Describing
# Add your code here
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
install.packages("flextable")
